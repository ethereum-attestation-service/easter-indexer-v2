generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Schema {
  id           String        @id
  schema       String
  creator      String
  resolver     String
  revocable    Boolean
  index        String
  txid         String
  time         Int
  attestations Attestation[]
}

model Attestation {
  id              String  @id
  data            String
  decodedDataJson String  @default("")
  schema          Schema  @relation(fields: [schemaId], references: [id])
  recipient       String
  attester        String
  time            Int
  timeCreated     Int
  expirationTime  Int
  revocationTime  Int
  refUID          String
  revocable       Boolean
  revoked         Boolean
  txid            String
  schemaId        String
  ipfsHash        String
  isOffchain      Boolean
}

model EnsName {
  id        String @id
  name      String
  timestamp Int
}

model ServiceStat {
  name  String @id
  value String
}

model User {
  id            String @id
  name          String
  authoredPosts Post[] @relation("Author")
  receivedPosts Post[] @relation("Recipient")
  createdAt     Int
}

model Post {
  id          String  @id @default(uuid())
  user        User    @relation("Author", fields: [userId], references: [id])
  userId      String
  recipient   User?   @relation("Recipient", fields: [recipientId], references: [id])
  recipientId String?
  content     String
  replies     Post[]  @relation("ReplyToPost")
  parent      Post?   @relation("ReplyToPost", fields: [parentId], references: [id])
  parentId    String?
  createdAt   Int
  revokedAt   Int
}
